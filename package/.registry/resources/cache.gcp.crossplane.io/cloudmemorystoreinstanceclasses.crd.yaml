
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: cloudmemorystoreinstanceclasses.cache.gcp.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - gcp
    kind: CloudMemorystoreInstanceClass
    listKind: CloudMemorystoreInstanceClassList
    plural: cloudmemorystoreinstanceclasses
    singular: cloudmemorystoreinstanceclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: A CloudMemorystoreInstanceClass is a resource class. It defines
        the desired spec of resource claims that use it to dynamically provision a
        managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            CloudMemorystoreInstance.
          properties:
            forProvider:
              description: 'CloudMemorystoreInstanceParameters define the desired
                state of an Google Cloud Memorystore instance. Most fields map directly
                to an Instance: https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance'
              properties:
                alternativeLocationId:
                  description: Only applicable to STANDARD_HA tier which protects
                    the instance against zonal failures by provisioning it across
                    two zones. If provided, it must be a different zone from the one
                    provided in [location_id].
                  type: string
                authorizedNetwork:
                  description: The full name of the Google Compute Engine [network](/compute/docs/networks-and-firewalls#networks)
                    to which the instance is connected. If left unspecified, the `default`
                    network will be used.
                  type: string
                displayName:
                  description: An arbitrary and optional user-provided name for the
                    instance.
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  description: Resource labels to represent user provided metadata
                  type: object
                locationId:
                  description: The zone where the instance will be provisioned. If
                    not provided, the service will choose a zone for the instance.
                    For STANDARD_HA tier, instances will be created across two zones
                    for protection against zonal failures. If [alternative_location_id]
                    is also provided, it must be different from [location_id].
                  type: string
                memorySizeGb:
                  description: Redis memory size in GiB.
                  format: int32
                  type: integer
                redisConfigs:
                  additionalProperties:
                    type: string
                  description: "Redis configuration parameters, according to http://redis.io/topics/config.
                    Currently, the only supported parameters are: \n  Redis 3.2 and
                    above: \n  *   maxmemory-policy  *   notify-keyspace-events \n
                    \ Redis 4.0 and above: \n  *   activedefrag  *   lfu-log-factor
                    \ *   lfu-decay-time"
                  type: object
                redisVersion:
                  description: "The version of Redis software. If not provided, latest
                    supported version will be used. Updating the version will perform
                    an upgrade/downgrade to the new version. Currently, the supported
                    values are: \n  *   `REDIS_4_0` for Redis 4.0 compatibility (default)
                    \ *   `REDIS_3_2` for Redis 3.2 compatibility"
                  type: string
                region:
                  description: Region in which to create this Cloud Memorystore cluster.
                  type: string
                reservedIpRange:
                  description: The CIDR range of internal addresses that are reserved
                    for this instance. If not provided, the service will choose an
                    unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29.
                    Ranges must be unique and non-overlapping with existing subnets
                    in an authorized network.
                  type: string
                tier:
                  description: Tier specifies the replication level of the Redis cluster.
                    BASIC provides a single Redis instance with no high availability.
                    STANDARD_HA provides a cluster of two Redis instances in distinct
                    availability zones. https://cloud.google.com/memorystore/docs/redis/redis-tiers
                  enum:
                  - BASIC
                  - STANDARD_HA
                  type: string
              required:
              - memorySizeGb
              - region
              - tier
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - forProvider
          - providerRef
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
